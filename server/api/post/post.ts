import { serverSupabaseUser } from "#supabase/server";
import prisma from "~/prisma/client";

export default defineEventHandler(async (event) => {
    const user = await serverSupabaseUser(event);
    if (!user) {
        throw createError({ status: 401, message: "Unauthorized" });
    }
    try {
        const { title, content, tags, topic } = await readBody(event);

        const dictionary = [
            "orfan",
            "intrerupere de sarcina",
            "anal",
            "anus",
            "cur",
            "fund-fucker",
            "fundurile",
            "idiotule",
            "gaozari",
            "ballbag",
            "bile",
            "bastard",
            "bellend",
            "bestial",
            "bestialitate",
            "căţea",
            "cățelele",
            "bitching",
            "sângeros",
            "muie",
            "muist",
            "muista",
            "muiste",
            "muistă",
            "bollok",
            "ţâţe",
            "sânii",
            "buceta",
            "vagabond",
            "îmbinare",
            "covor",
            "clinchet",
            "cipa",
            "clitoris",
            "cocoş",
            "cocoș-fraier",
            "cocoșilor",
            "șarlatan",
            "rahat",
            "spermă",
            "cumshot",
            "cunillingus",
            "pizdă",
            "la naiba",
            "pulă",
            "vibrator",
            "dildo-uri",
            "dink",
            "câine-fucker",
            "duche",
            "opritoare",
            "exclama",
            "ejaculat",
            "ejaculează",
            "ejacula",
            "ejaculare",
            "corvoadă",
            "istovitor",
            "snop",
            "poponari",
            "fanny",
            "felching",
            "felatie",
            "flanșă",
            "la dracu",
            "inpulit",
            "nenorocitule",
            "futangiilor",
            "dracului",
            "fuckings",
            "fucks",
            "fuck",
            "fudge packer",
            "zeu-al naibii",
            "iad",
            "hore",
            "excitat",
            "smucitură-off",
            "kock",
            "labiilor",
            "dorință",
            "lusting",
            "masochist",
            "masturbezi",
            "mama nenorocită",
            "nazist",
            "negru",
            "cioroi",
            "orgasim",
            "orgasm",
            "orgasme",
            "ciocănitoare",
            "penis",
            "pișa",
            "ofticat",
            "pisser",
            "pisată",
            "pissing",
            "pissoff",
            "porn",
            "porno",
            "pornografie",
            "înțepătură",
            "intepaturi",
            "pube",
            "pizde",
            "păsărică",
            "viol",
            "violator",
            "rect",
            "întârzia",
            "rimming",
            "sadic",
            "insurubare",
            "scrot",
            "material seminal",
            "sex",
            "loden",
            "trăgea",
            "transexuali",
            "porcarie",
            "cacă",
            "shitted",
            "caca",
            "de pulărie",
            "skank",
            "curvă",
            "curva",
            "curve",
            "smegma",
            "negru de fum",
            "smulge",
            "fecior de curva",
            "spac",
            "curaj",
            "testicul",
            "pițigoi",
            "titt",
            "câcat",
            "vagin",
            "viagra",
            "vulvă",
            "wang",
            "wank",
            "x evaluat",
            "xxx"
        ]

        if (dictionary.some((word) => content.includes(word) || title.includes(word) || tags.some((tag: String) => tag.includes(word)))) {
            const warn = "bad word";
            return warn;
        }

        const createPost = await prisma.post.create({
            data: {
                title,
                content,
                author: {
                    connect: { id: user.id },
                },
                topic: {
                    connect: {
                        name: topic
                    },
                },
                tags: {
                    connectOrCreate: tags.map((tag: string) => ({
                        where: { name: tag },
                        create: { name: tag },
                    })),
                },
            },
        });

        return createPost;
    } catch (error: any) {
        throw createError({ status: 500, message: error.message });
    }
});
